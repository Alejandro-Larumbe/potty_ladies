// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["nativeTypes"]
}

model Order {
  id             Int        @id @default(autoincrement())
  userId         Int
  total          Decimal
  dateTime       DateTime
  promoCodeId    Int?
  addressStreet1 String
  addressStreet2 String?
  addressCity    String
  addressState   String
  addressCountry String
  addressZip     Int
  status         String
  updatedAt      DateTime   @updatedAt
  createdAt      DateTime   @default(now())
  promo          PromoCode? @relation(fields: [promoCodeId], references: [id])
  User           User?      @relation(fields: [userId], references: [id])

model Image {
  id        Int     @default(autoincrememt()) @id
  plantId   Int
  url       String
  plant     Plant   @relation(fields: [plantId], references:[id])
}

model OrderItem {
  id        Int     @default(autoincrememt()) @id
  orderId   Int
  plantId   Int
  quantity  Int
  plant     Plant   @relation(fields: [plantId], references:[id])
  order     Order   @relation(fields: [orderId], references:[id])
}

model Theme {
  id            Int     @default(autoincrememt()) @id
  headliner1    Int?
  headliner2    Int?
  headliner3    Int?
  coverPicture1 String?
  coverPicture2 String?
  coverPicture3 String?
  coverPicture4 String?
  coverPicture5 String?
  mainText1     String?
  mainText2     String?
  mainText3     String?
}


model User {
  id             Int      @id @default(autoincrement())
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  firstName      String
  lastName       String
  email          String   @unique
  phone          String?
  hashedPassword String
  addressStreet1 String?
  addressStreet2 String?
  addressCity    String?
  addressRegion  String?
  addressCountry String?
  addressZip     Int?

  orders Order[]
}

model PromoCode {
  id             Int      @id @default(autoincrement())
  name           String   @unique
  expirationDate DateTime
  isActive       Boolean  @default(false)
  Order          Order[]
}

model Plant {
  id          Int     @id @default(autoincrement())
  name        String  @unique
  typeId      Int
  description String
  dimensions  String
  price       Decimal
  stock       Int
  potSize     String
  type        Type    @relation(fields: [typeId], references: id)
  tags        Tag[]
}

model Tag {
  id     Int     @id @default(autoincrement())
  name   String  @unique
  plants Plant[]
}

// Would this be better as PlantTag?
model TagPlant {
  id      Int   @id @default(autoincrement())
  plant   Plant @relation(fields: [plantId], references: [id])
  tag     Tag   @relation(fields: [tagId], references: [id])
  plantId Int
  tagId   Int
}
